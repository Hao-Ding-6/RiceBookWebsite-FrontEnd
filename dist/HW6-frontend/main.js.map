{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/adapter.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/login/login.service.ts","webpack:///./src/app/auth/registration/registration.component.css","webpack:///./src/app/auth/registration/registration.component.html","webpack:///./src/app/auth/registration/registration.component.ts","webpack:///./src/app/auth/registration/registration.service.ts","webpack:///./src/app/main/following/following.component.css","webpack:///./src/app/main/following/following.component.html","webpack:///./src/app/main/following/following.component.ts","webpack:///./src/app/main/following/following.service.ts","webpack:///./src/app/main/headline/headline.component.css","webpack:///./src/app/main/headline/headline.component.html","webpack:///./src/app/main/headline/headline.component.ts","webpack:///./src/app/main/headline/headline.service.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/main.service.ts","webpack:///./src/app/main/posts/posts.component.css","webpack:///./src/app/main/posts/posts.component.html","webpack:///./src/app/main/posts/posts.component.ts","webpack:///./src/app/main/posts/posts.service.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/profile.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/** This service is used to store profile info as Json string. **/\nexport class AdapterService {\n  shouldUpdatePosts = false;\n  shouldUpdateFollowers = false;\n  userLogin = \"\";\n  jsonStr: string;\n  postsList: string[] = [];\n  followersList: string[];\n  searchPostsList: string[] = [];\n  afterSearch = false;\n  constructor() { }\n\n  /** Set login user **/\n  setUser(userLogin) {\n    this.userLogin = userLogin;\n  }\n\n  /** Get login user **/\n  getUser() {\n    return this.userLogin;\n  }\n\n  /** Set Json info **/\n  setJson(jsonStr) {\n    this.jsonStr = jsonStr;\n  }\n\n  /** Get Json info **/\n  getJson() {\n    return this.jsonStr;\n  }\n\n  /** Set post list **/\n  setPostsList(postsList) {\n    this.postsList = postsList;\n  }\n\n  /** Get post list **/\n  getPostsList() {\n    return this.postsList;\n  }\n\n  /** Set followers list **/\n  setFollowersList(followersList) {\n    this.followersList = followersList;\n  }\n\n  /** Get followers list **/\n  getFollowersList() {\n    return this.followersList;\n  }\n\n  /** Set search posts list **/\n  setSearchPostsList(searchPostsList) {\n    this.searchPostsList = searchPostsList;\n    this.afterSearch = true;\n  }\n\n  /** Get sarch post list **/\n  getSearchPostsList() {\n    return this.searchPostsList;\n  }\n\n\n}\n","module.exports = \"/*fake css for submit*/\\r\\ndiv {\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!--<app-auth></app-auth>-->\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hw4';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegistrationComponent } from './auth/registration/registration.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule, MatDatepickerModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material';\nimport { MatToolbarModule } from '@angular/material';\nimport { MatTableModule } from '@angular/material';\nimport { MatIconModule } from '@angular/material';\nimport { MatChipsModule } from '@angular/material';\nimport { MatNativeDateModule } from '@angular/material';\nimport { MatSidenavModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MainComponent } from './main/main.component';\nimport { HeadlineComponent } from './main/headline/headline.component';\nimport { FollowingComponent } from './main/following/following.component';\nimport { PostsComponent } from './main/posts/posts.component';\nimport { RouterModule, Routes} from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { MatListModule } from '@angular/material';\n\nexport const routes: Routes = [{ path: '', component : AuthComponent },\n                               { path: 'auth', component : AuthComponent },\n                               { path: 'main', component : MainComponent },\n                               { path: 'profile', component : ProfileComponent }];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    LoginComponent,\n    RegistrationComponent,\n    MainComponent,\n    HeadlineComponent,\n    FollowingComponent,\n    PostsComponent,\n    ProfileComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatInputModule,\n    HttpClientModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatChipsModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule.forRoot(routes, {useHash: true})\n  ],\n  exports: [\n    RouterModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"body {\\r\\n  height: 136%;\\r\\n  background: url(https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-686013.png) no-repeat fixed;\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\nmat-toolbar{\\r\\n  font-size: 150%;\\r\\n}\\r\\n\\r\\n#registration-layout {\\r\\n  float: left;\\r\\n  margin-left:10%;\\r\\n  margin-top:5%;\\r\\n}\\r\\n\\r\\n#login-layout {\\r\\n  float: right;\\r\\n  margin-right:10%;\\r\\n  margin-top:5%;\\r\\n}\\r\\n\"","module.exports = \"<!DOCTYPE html>\\n\\n<html>\\n  <head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"author\\\" content=\\\"Hao Ding(netID: hd25)\\\">\\n  </head>\\n\\n  <body>\\n    <mat-toolbar color=\\\"primary\\\"> Welcome to Rice Book! </mat-toolbar>\\n    <app-registration id=\\\"registration-layout\\\"></app-registration>\\n    <app-login id=\\\"login-layout\\\"></app-login>\\n  </body>\\n\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"h2 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.loginDiv {\\r\\n  margin:20px auto;\\r\\n  padding:10px 60px 10px 60px;\\r\\n  background-color:rgba(255, 255, 255, 0.6);\\r\\n  border-color:#ffffcc;\\r\\n}\\r\\n\\r\\n#google-btn {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"loginDiv\\\">\\n  <h2> LOGIN IN </h2>\\n  <form #loginForm=\\\"ngForm\\\" [formGroup]=\\\"formLogin\\\" name=\\\"loginForm\\\" method=\\\"GET\\\" action=\\\"/main\\\">\\n    <p>ACCOUNT NAME:\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" id=\\\"login-accountName\\\" name=\\\"accountName\\\" placeholder=\\\"Hao Ding\\\" formControlName=\\\"accountControl\\\" [formControl]=\\\"accountFormControl\\\" required>\\n        <mat-error *ngIf=\\\"accountFormControl.hasError('pattern')\\\">\\n          Please enter a valid account name\\n        </mat-error>\\n        <mat-error *ngIf=\\\"accountFormControl.hasError('required')\\\">\\n          Account Name is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>PASSWORD:\\n      <mat-form-field>\\n        <input matInput type=\\\"password\\\" id=\\\"login-password\\\" name=\\\"password\\\" formControlName=\\\"passwordControl\\\" [formControl]=\\\"passwordFormControl\\\" required>\\n        <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n          Password is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>\\n      <input mat-button (click)=\\\"isRegistered()\\\" class=\\\"mat-raised-button mat-accent\\\" type=\\\"submit\\\" value=\\\"Login\\\" id=\\\"loginBtn\\\"\\n                        [disabled]=\\\"!loginForm.valid\\\">\\n\\n      <button class=\\\"mat-raised-button\\\" id=\\\"google-btn\\\" mat-button color=\\\"accent\\\" (click)=\\\"GoogleLogin()\\\"> <mat-icon>person_outline</mat-icon> Login with Google </button>\\n    </p>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login/login.service';\nimport { FormGroup } from '@angular/forms';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(private loginService: LoginService, private router: Router) { }\n  formLogin;\n\n  accountFormControl;\n  passwordFormControl;\n  registeredUserList: string[];\n  ngOnInit() {\n    this.loginService.getRegisteredJson().subscribe(response => {this.registeredUserList = response['registered_user']});\n    this.accountFormControl = this.loginService.getAccountControl();\n    this.passwordFormControl = this.loginService.getPasswpordControl();\n    this.formLogin = new FormGroup({\n      accountControl: this.accountFormControl,\n      passwordControl: this.passwordFormControl\n    });\n  }\n\n  /** check if accountName and password are in registered list **/\n  isRegistered() {\n    this.loginService.isRegistered(this.formLogin.value.accountControl, this.formLogin.value.passwordControl);\n  }\n\n  /** login with facebook **/\n  GoogleLogin() {\n    window.location.href = 'https://ricebook-hd25.herokuapp.com/login/auth/google';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport {AdapterService} from '../../adapter.service';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  accountFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^(?![0-9])[a-zA-Z0-9]+$/)]);\n\n  passwordFormControl = new FormControl('', [\n    Validators.required]);\n\n  constructor(private http: HttpClient, private adapter: AdapterService, private router: Router) {\n    // this.http.get('assets/registered_user.json').subscribe(response => {this.registered_user = response['registered_user']});\n  }\n\n  getAccountControl(): FormControl {\n    return this.accountFormControl;\n  }\n\n  getPasswpordControl(): FormControl {\n    return this.passwordFormControl;\n  }\n\n  getRegisteredJson() {\n    return this.http.get('assets/registered_user.json');\n  }\n\n  isRegistered(accountName, password) {\n    const body = {accountName: accountName, password: password};\n    this.http.post('https://ricebook-hd25.herokuapp.com/login', body, {withCredentials: true}).subscribe(response => {\n      localStorage.setItem(\"accountName\", accountName);\n      this.router.navigate([\"/main\"]);\n    });\n  }\n\n//   const body = {username: accountLogin, password: pwdLogin};\n//   this.http.post('https://ricebookofchen.herokuapp.com/login', body, {withCredentials:true}).subscribe(response => {\n//   localStorage.setItem(\"username\", accountLogin);\n//   this.router.navigateByUrl('/main');\n// });\n\n\n}\n","module.exports = \"h2 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.registerDiv {\\r\\n  margin:20px auto;\\r\\n  padding:10px 60px 10px 60px;\\r\\n  background-color:rgba(255, 255, 255, 0.6);\\r\\n  border-color:#ffffcc;\\r\\n}\\r\\n\\r\\n.mat-raised-button {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\n.errorDiv {\\r\\n  color: #f44336;\\r\\n  font-size: 75%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"registerDiv\\\">\\n  <h2> REGISTRATION </h2>\\n\\n  <form #registerForm=\\\"ngForm\\\" [formGroup]=\\\"formRegister\\\" name=\\\"registerForm\\\" method=\\\"GET\\\" action=\\\"/main\\\">\\n    <p>ACCOUNT NAME:\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" id=\\\"accountName\\\" name=\\\"accountName\\\" placeholder=\\\"Hao Ding\\\" formControlName=\\\"accountControl\\\" [formControl]=\\\"accountFormControl\\\" required>\\n        <mat-error *ngIf=\\\"accountFormControl.hasError('pattern')\\\">\\n          Please enter a valid account name\\n        </mat-error>\\n        <mat-error *ngIf=\\\"accountFormControl.hasError('required')\\\">\\n          Account Name is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>DISPLAY NAME:\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" id=\\\"displayName\\\" name=\\\"displayName\\\" placeholder=\\\"Hao-Ding-6\\\" formControlName=\\\"displayControl\\\" [formControl]=\\\"displayFormControl\\\">\\n      </mat-form-field>\\n    </p>\\n\\n    <p>EMAIL ADDRESS:\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" id=\\\"emailAddress\\\" name=\\\"emailAddress\\\" placeholder=\\\"xxx@xxx.com\\\" formControlName=\\\"emailControl\\\" [formControl]=\\\"emailFormControl\\\" required>\\n        <mat-error *ngIf=\\\"emailFormControl.hasError('pattern')\\\">\\n          Please enter a valid email address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n          Email is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>DATE OF BIRTH:\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker\\\" id=\\\"birthday\\\" name=\\\"birthday\\\" placeholder=\\\"Choose your birth date\\\" formControlName=\\\"birthdayControl\\\" [formControl]=\\\"birthdayFormControl\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <mat-error *ngIf=\\\"birthdayFormControl.hasError('required')\\\">\\n          Date of birth is <strong>required</strong>\\n        </mat-error>\\n        <div class=\\\"errorDiv\\\" *ngIf=\\\"!isAdult()\\\">\\n          You should be more than 18\\n        </div>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>PHONE NUMBER:\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" id=\\\"phoneNumber\\\" name=\\\"phoneNumber\\\" placeholder=\\\"123-123-1234\\\"  formControlName=\\\"phonenumControl\\\" [formControl]=\\\"phonenumFormControl\\\" required>\\n        <mat-error *ngIf=\\\"phonenumFormControl.hasError('pattern')\\\">\\n          Please enter a valid phone number\\n        </mat-error>\\n        <mat-error *ngIf=\\\"phonenumFormControl.hasError('required')\\\">\\n          Phone Number is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>ZIP CODE:\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" id=\\\"zipCode\\\" name=\\\"zipCode\\\" placeholder=\\\"77030\\\" formControlName=\\\"zipcodeControl\\\" [formControl]=\\\"zipcodeFormControl\\\" required>\\n        <mat-error *ngIf=\\\"zipcodeFormControl.hasError('pattern')\\\">\\n          Please enter a valid zipcode\\n        </mat-error>\\n        <mat-error *ngIf=\\\"zipcodeFormControl.hasError('required')\\\">\\n          Zipcode is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>PASSWORD:\\n      <mat-form-field>\\n        <input matInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"passwordControl\\\" [formControl]=\\\"passwordFormControl\\\" required>\\n        <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n          Password is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>PASSWORD CONFIRMATION:\\n      <mat-form-field>\\n        <input matInput type=\\\"password\\\" id=\\\"passwordConfirm\\\" name=\\\"passwordConfirm\\\" formControlName=\\\"passwordconfirmControl\\\" [formControl]=\\\"passwordconfirmFormControl\\\" required>\\n        <mat-error *ngIf=\\\"passwordconfirmFormControl.hasError('required')\\\">\\n          Password Confirmation is <strong>required</strong>\\n        </mat-error>\\n        <div class=\\\"errorDiv\\\" *ngIf=\\\"!passwordMatch()\\\">\\n          Password confirmation should be equal to password above\\n        </div>\\n      </mat-form-field>\\n    </p>\\n\\n    <p>\\n      <input mat-button (click)=\\\"submitForm()\\\" class=\\\"mat-raised-button mat-accent\\\" type=\\\"submit\\\" value=\\\"Submit\\\" id=\\\"registerBtn\\\"\\n                        [disabled]=\\\"!registerForm.valid || !isAdult() || !passwordMatch()\\\">\\n      <input mat-button class=\\\"mat-raised-button mat-accent\\\" type=\\\"reset\\\" value=\\\"Clear\\\">\\n    </p>\\n  </form>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RegistrationService } from '../registration/registration.service';\nimport { AdapterService } from '../../adapter.service';\nimport { FormGroup } from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  constructor(private registerService: RegistrationService, private adapterService: AdapterService, private router: Router) { }\n  formRegister;\n\n  accountFormControl;\n  displayFormControl;\n  emailFormControl;\n  birthdayFormControl;\n  phonenumFormControl;\n  zipcodeFormControl;\n  passwordFormControl;\n  passwordconfirmFormControl;\n\n  ngOnInit() {\n    this.accountFormControl = this.registerService.getAccountControl();\n    this.displayFormControl = this.registerService.getDisplayControl();\n    this.emailFormControl = this.registerService.getEmailControl();\n    this.birthdayFormControl = this.registerService.getBirthdayControl();\n    this.phonenumFormControl = this.registerService.getPhonenumControl();\n    this.zipcodeFormControl = this.registerService.getZipcodeControl();\n    this.passwordFormControl = this.registerService.getPasswordControl();\n    this.passwordconfirmFormControl = this.registerService.getPasswordconfirmControl();\n    this.formRegister = new FormGroup({\n      accountControl: this.accountFormControl,\n      displayControl: this.displayFormControl,\n      emailControl: this.emailFormControl,\n      birthdayControl: this.birthdayFormControl,\n      phonenumControl: this.phonenumFormControl,\n      zipcodeControl: this.zipcodeFormControl,\n      passwordControl: this.passwordFormControl,\n      passwordconfirmControl: this.passwordconfirmFormControl\n    });\n  }\n\n  jsonStr: string;\n  submitForm() {\n    var accountName = this.formRegister.value.accountControl;\n    var displayName = this.formRegister.value.displayControl;\n    var emailAddress = this.formRegister.value.emailControl;\n    var selectedDate = new Date(this.formRegister.value.birthdayControl);\n    var birthday =  selectedDate.getFullYear() + \"-\" + (selectedDate.getMonth() + 1) + \"-\" + selectedDate.getDate();\n    var phoneNumber = this.formRegister.value.phonenumControl;\n    var zipCode = this.formRegister.value.zipcodeControl;\n    var password = this.formRegister.value.passwordControl;\n    this.jsonStr = '{\"profile\":[' + '{\"accountName\":\"' + accountName + '\",\"displayName\":\"' + displayName + '\",\"emailAddress\":\"' +\n      emailAddress + '\",\"birthday\":\"' + birthday + '\",\"phoneNumber\":\"' + phoneNumber + '\",\"zipCode\":\"' + zipCode + '\",\"password\":\"' + password +\n      '\",\"avatar\":\"' +  \"https://tomli.blog/wp-content/plugins/stronger-github-widget//img/octocat_big.png\" +\n      '\",\"headline\":\"'+ \"I'm a new user, cool.\" + '\"}' + ']}';\n    console.log(this.jsonStr);\n    this.adapterService.setJson(this.jsonStr);\n\n    /** send register info to db **/\n    this.registerService.registerInfo2DB(accountName, displayName, emailAddress, birthday, phoneNumber, zipCode, password);\n\n    // this.router.navigate([\"/main\"]); // new user can not log in\n  }\n\n  isAdult() {\n    var selectedDate = new Date(this.formRegister.value.birthdayControl);\n    var birthYear = selectedDate.getFullYear();\n    var birthMonth = selectedDate.getMonth() + 1;\n    var birthDay = selectedDate.getDate();\n\n    var curTime = new Date();\n    var curYear = curTime.getFullYear();\n    var curMonth = curTime.getMonth() + 1;\n    var curDay = curTime.getDate();\n\n    if (curYear - birthYear < 18) {\n      return false;\n    }\n    else if (curYear - birthYear === 18) {\n      if (curMonth - birthMonth  < 0) {\n        return false\n      }\n      else if (curMonth - birthMonth === 0) {\n        if (curDay - birthDay < 0) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  passwordMatch() {\n    var password1 = this.formRegister.value.passwordControl;\n    var password2 = this.formRegister.value.passwordconfirmControl;\n    if (password1 !== password2) {\n      return false;\n    }\n    return true;\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n  accountFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^(?![0-9])[a-zA-Z0-9]+$/)]);\n\n  displayFormControl = new FormControl('', []);\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/)]);\n\n  birthdayFormControl = new FormControl('', [\n    Validators.required]);\n\n  phonenumFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/)]);\n\n  zipcodeFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[0-9]{5}(-[0-9]{4})?/)]);\n\n  passwordFormControl = new FormControl('', [\n    Validators.required]);\n\n  passwordconfirmFormControl = new FormControl('', [\n    Validators.required]);\n\n  constructor(private http: HttpClient) { }\n\n  getAccountControl(): FormControl {\n    return this.accountFormControl;\n  }\n\n  getDisplayControl(): FormControl {\n    return this.displayFormControl;\n  }\n\n  getEmailControl(): FormControl {\n    return this.emailFormControl;\n  }\n\n  getBirthdayControl(): FormControl {\n    return this.birthdayFormControl;\n  }\n\n  getPhonenumControl(): FormControl {\n    return this.phonenumFormControl;\n  }\n\n  getZipcodeControl(): FormControl {\n    return this.zipcodeFormControl;\n  }\n\n  getPasswordControl(): FormControl {\n    return this.passwordFormControl;\n  }\n\n  getPasswordconfirmControl(): FormControl {\n    return this.passwordconfirmFormControl;\n  }\n\n  registerInfo2DB(accountName, displayName, emailAddress, birthday, phoneNumber, zipCode, password) {\n    const body = {accountName: accountName,\n                  displayName: displayName,\n                  emailAddress: emailAddress,\n                  birthday: birthday,\n                  phoneNumber: phoneNumber,\n                  zipCode: zipCode,\n                  password: password,\n                  avatar: \"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-710595.png\",\n                  headline: \"I'm a new user, cool.\"};\n    this.http.post('https://ricebook-hd25.herokuapp.com/register', body).subscribe(response => {});\n  }\n}\n","module.exports = \"h2 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  /*width: 330px;*/\\r\\n  width: 100%\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n#addButtonCard {\\r\\n  width: 330px;\\r\\n}\\r\\n\\r\\n.errorDiv {\\r\\n  color: #f44336;\\r\\n  font-size: 75%;\\r\\n}\\r\\n\"","module.exports = \"<!--User's follower HTML-->\\n<div>\\n  <mat-card>\\n    <h2>Followers</h2>\\n    <!--Use mat-card to contain info of followers-->\\n    <mat-card-header *ngFor=\\\"let follower of followersList\\\"> <!--followerList contains info from follower.json, assigned in following.component.ts file-->\\n      <!--Follower's avatar, name and headline-->\\n      <img mat-card-avatar src=\\\"{{follower.avatar}}\\\">\\n      <mat-card-title>{{follower.accountName}}</mat-card-title>\\n      <mat-card-subtitle>{{follower.headline}}</mat-card-subtitle>\\n\\n      <!--Button to unfollow(remove)-->\\n      <button id=\\\"remove-btn\\\" mat-mini-fab (click)=\\\"removeFollower(follower.accountName)\\\">\\n        <mat-icon>remove</mat-icon>\\n      </button>\\n\\n    </mat-card-header>\\n\\n    <!--Button to add follower-->\\n    <mat-card-header id=\\\"addButtonCard\\\">\\n      <form #addfollowerForm=\\\"ngForm\\\" [formGroup]=\\\"formAddfollower\\\" method=\\\"GET\\\">\\n\\n        <!--<mat-card-subtitle>________________________________________________</mat-card-subtitle>-->\\n        <mat-form-field>\\n          <input matInput type=\\\"text\\\" name=\\\"followerName\\\" placeholder=\\\"Name of new follower\\\" formControlName=\\\"followernameControl\\\" [formControl]=\\\"followernameFormControl\\\" [(ngModel)]=\\\"addfollower_clear\\\">\\n          <div class=\\\"errorDiv\\\" *ngIf=\\\"!checkFollower()\\\">\\n            User must be registered and not exist in follower list.\\n          </div>\\n        </mat-form-field>\\n\\n        <button mat-mini-fab color=\\\"warn\\\" (click)=\\\"addFollower()\\\">\\n          <mat-icon>add</mat-icon> <!--Angular Material button icon-->\\n        </button>\\n\\n      </form>\\n\\n    </mat-card-header>\\n\\n\\n  </mat-card>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FollowingService } from './following.service';\nimport {FormGroup} from '@angular/forms';\nimport {AdapterService} from '../../adapter.service';\nimport {PostsService} from '../posts/posts.service';\n\n@Component({\n  selector: 'app-following',\n  templateUrl: './following.component.html',\n  styleUrls: ['./following.component.css']\n})\nexport class FollowingComponent implements OnInit {\n  constructor(private http: HttpClient, private followingService: FollowingService, private adapterService: AdapterService, private postService: PostsService) { }\n  accountName: string;\n  followersList: Object[] = [];\n  registeredUserList: string[];\n  postsList: string[] = [];\n\n  formAddfollower;\n  followernameFormControl;\n\n  addfollower_clear:string = '';\n\n  ngOnInit() {\n    this.http.get('https://ricebook-hd25.herokuapp.com/accountname', {withCredentials: true}).subscribe( response => {\n      localStorage.setItem(\"accountName\", response['accountName']);\n\n      if (localStorage.getItem(\"accountName\") !== null) {\n        this.accountName = localStorage.getItem(\"accountName\");\n      }\n\n      this.loadFollower();\n\n      // this.followingService.getFollowerJson().subscribe(response => {\n      //   this.followersList = response['followers'];\n      // });\n      // this.followingService.getFollowerJson().subscribe(response => {\n      //   this.adapter.setFollowersList(response['followers']);\n      // });\n      // this.followingService.getRegisteredJson().subscribe(response => {this.registeredUserList = response['registered_user']});\n      // this.followingService.getPostJson().subscribe(response => {this.postsList = response['articles']});\n    });\n\n    this.followernameFormControl = this.followingService.getFollowernameControl();\n    this.formAddfollower = new FormGroup({\n      followernameControl: this.followernameFormControl\n    });\n\n  }\n\n  loadFollower() {\n    this.http.get('https://ricebook-hd25.herokuapp.com/following/' + this.accountName, {withCredentials: true}).subscribe(response => {\n      var following = response['following'].join(',');\n      if (following === null || following === \"\") {\n        this.followersList = [];\n      }\n      else {\n        this.http.get('https://ricebook-hd25.herokuapp.com/avatar/' + following, {withCredentials: true}).subscribe(response_avatar => {\n          this.http.get('https://ricebook-hd25.herokuapp.com/headlines/' + following, {withCredentials: true}).subscribe(response_headline => {\n            this.followersList = this.followingService.makeFollowerList(response_avatar['avatar'], response_headline['headline']);\n          });\n        });\n      }\n    });\n  }\n\n  checkFollower() {\n    return this.followingService.checkFollower(this.formAddfollower.value.followernameControl, this.followersList);\n  }\n\n  /** Add new follower **/\n  addFollower() {\n    this.followingService.addFollower(this.accountName, this.formAddfollower.value.followernameControl, this.followersList).subscribe(response => {\n      if (response['status'] === 404) {\n        return;\n      }\n\n      var user2Add = this.formAddfollower.value.followernameControl;\n      var follower = {};\n      follower['accountName'] = user2Add;\n      this.http.get('https://ricebook-hd25.herokuapp.com/avatar/' + user2Add, {withCredentials: true}).subscribe(response => {\n        follower['avatar'] = response['avatar'][0]['avatar'];\n      });\n\n      this.http.get('https://ricebook-hd25.herokuapp.com/headlines/' + user2Add, {withCredentials: true}).subscribe(response => {\n        follower['headline'] = response['headline'][0]['headline'];\n      });\n      this.followersList.push(follower);\n\n      this.loadFollower();\n\n      /** reload articles **/\n      this.http.get('https://ricebook-hd25.herokuapp.com/articles/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.postsList = response['articles'];\n        this.postsList.forEach(post => {\n          post['editable'] = false;\n          post['comments'].forEach(comment => {\n            comment['editable'] = false;\n          });\n        });\n        this.adapterService.setPostsList(this.postsList);\n      });\n    });\n\n    /** Clear input area after adding follower **/\n    this.addfollower_clear = '';\n  }\n\n  /** sort posts by time **/\n  sort() {\n    this.postsList.sort(function (post1, post2) {\n      return (post1['date'] < post2['date']) ? 1 : -1;\n    });\n  }\n\n  /** Delete follower from followerList **/\n  removeFollower(user2Delete) {\n    this.followingService.removeFollower(this.accountName, user2Delete, this.followersList).subscribe(response => {\n      this.loadFollower();\n    });\n\n    /** update post list cache **/\n    var postsList = this.adapterService.getPostsList();\n    for (var i = 0; i < postsList.length; ) {\n      if (postsList[i]['author'] === user2Delete) {\n        postsList.splice(i, 1);\n      } else {\n        i ++;\n      }\n    }\n    this.adapterService.setPostsList(postsList);\n\n    // this.adapter.shouldUpdatePosts = true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport {AdapterService} from '../../adapter.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FollowingService {\n  followernameFormControl = new FormControl('', []);\n  postsList: string[] = [];\n\n  constructor(private http: HttpClient, private adapterService: AdapterService) { }\n  getFollowernameControl() {\n    return this.followernameFormControl;\n  }\n\n  getFollowerJson() {\n    return this.http.get('assets/follower.json');\n  }\n\n  getRegisteredJson() {\n    return this.http.get('assets/registered_user.json');\n  }\n\n  getPostJson() {\n    return this.http.get('assets/articles.json');\n  }\n\n  makeFollowerList(avatars, headlines) {\n    var followerList = [];\n    for (var i = 0 ; i < avatars.length; i ++) {\n      var follower = {};\n      follower['accountName'] = avatars[i]['accountName'];\n      follower['avatar'] = avatars[i]['avatar'];\n      follower['headline'] = headlines[i]['headline'];\n      followerList.push(follower);\n    }\n    return followerList;\n  }\n\n  checkFollower(name, followersList) {\n    if (name === \"\") return true;\n    if (followersList == null) return true;\n\n    /** check if to-be-added user already exists in followersList **/\n    for (var i = 0; i < followersList.length; i++) {\n      if (followersList[i]['accountName'] === name)\n        return false;\n    }\n\n    return true;\n  }\n\n  addFollower(accountName, user2Add, followersList) {\n    if (!this.checkFollower(user2Add, followersList)) {\n      return;\n    }\n    if (user2Add === null || user2Add === \"\") {\n      return ;\n    }\n\n    // var follower = {};\n    // follower['accountName'] = user2Add;\n    // this.http.get('https://ricebook-hd25.herokuapp.com/avatar/' + user2Add, {withCredentials: true}).subscribe(response => {\n    //   follower['avatar'] = response['avatar'][0]['avatar'];\n    // });\n    //\n    // this.http.get('https://ricebook-hd25.herokuapp.com/headlines/' + user2Add, {withCredentials: true}).subscribe(response => {\n    //   follower['headline'] = response['headline'][0]['headline'];\n    // });\n    // followersList.push(follower);\n\n    return this.http.put('https://ricebook-hd25.herokuapp.com/following/' + user2Add + ',' + accountName, {}, {withCredentials: true});\n  }\n\n  removeFollower(accountName, user2Delete, followersList) {\n    for (var i = 0; i < followersList.length; i++) {\n      if (followersList[i]['accountName'] === name) {\n        if (followersList.length === 1) {\n          followersList = [];\n        }\n        else {\n          followersList.splice(i, 1);\n        }\n        break;\n      }\n    }\n\n    return this.http.delete('https://ricebook-hd25.herokuapp.com/following/' + user2Delete + ',' + accountName, {withCredentials: true});\n\n    // var postsList = this.adapterService.getPostsList();\n    // for (var i = 0; i < postsList.length;) {\n    //   if (postsList[i]['author'] === name) {\n    //     postsList.splice(i, 1);\n    //     this.adapterService.afterSearch = false;\n    //   }\n    //   else {\n    //     i++;\n    //   }\n    // }\n    // this.adapterService.setPostsList(postsList);\n\n  }\n}\n","module.exports = \"h2 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*.user-avatar {*/\\r\\n\\r\\n/*background-image: url('https://scontent-sea1-1.cdninstagram.com/vp/65a953a1d3330a19b8864afddae6a285/5C2D0AE8/t51.2885-15/e35/11356926_954110691316269_659282159_n.jpg?ig_cache_key=MTAzNDU1Mzg4MzU5MzQ2NzgxOQ%3D%3D.2');*/\\r\\n\\r\\n/*background-size: cover;*/\\r\\n\\r\\n/*}*/\\r\\n\\r\\n/*.user-card {*/\\r\\n\\r\\n/*float: left;*/\\r\\n\\r\\n/*}*/\\r\\n\\r\\nmat-card {\\r\\n  /*width: 330px;*/\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n  <mat-card class=\\\"user-card\\\">\\n    <h2> User Info </h2>\\n    <!--Use mat-card to contain info of user-->\\n    <mat-card-header>\\n      <!--<div mat-card-avatar class=\\\"user-avatar\\\"></div>-->\\n      <img mat-card-avatar src={{avatar}}>\\n      <mat-card-title> {{accountName}} </mat-card-title>\\n      <mat-card-subtitle>\\n        <span id=\\\"headlineContent\\\">{{ headlineContent }}</span> <br> <!--Assigned in headline.component.ts file-->\\n\\n        <!--Field and button to update user's headline-->\\n        <mat-form-field floatPlaceholder=\\\"never\\\">\\n          <input matInput #headline placeholder=\\\"Update Headline\\\" [(ngModel)]=\\\"headline_clear\\\" id=\\\"headlineInput\\\">\\n        </mat-form-field>\\n        <button mat-button id=\\\"headlineBtn\\\" color=\\\"primary\\\" (click)=\\\"updateHeadline(headline.value)\\\"> <mat-icon>update</mat-icon> </button>\\n\\n      </mat-card-subtitle>\\n\\n    </mat-card-header>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {HeadlineService} from './headline.service';\n\n@Component({\n  selector: 'app-headline',\n  templateUrl: './headline.component.html',\n  styleUrls: ['./headline.component.css']\n})\nexport class HeadlineComponent implements OnInit {\n  avatar: string;\n  accountName: string;\n  headlineContent: string;\n\n  headline_clear:string = '';\n  constructor(private http: HttpClient, private headlineService: HeadlineService) { }\n\n  ngOnInit() {\n    /** get account name from local storage **/\n    this.http.get('https://ricebook-hd25.herokuapp.com/accountname', {withCredentials: true}).subscribe( response => {\n      localStorage.setItem(\"accountName\", response['accountName']);\n\n      if (localStorage.getItem(\"accountName\") !== null) {\n        this.accountName = localStorage.getItem(\"accountName\");\n      }\n\n      /** get avatar from db **/\n      // this.avatar = \"https://tomli.blog/wp-content/plugins/stronger-github-widget//img/octocat_big.png\";\n      this.http.get('https://ricebook-hd25.herokuapp.com/avatar/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.avatar = response['avatar'][0]['avatar'];\n      });\n\n      /** get headline from db according to account name **/\n      this.http.get('https://ricebook-hd25.herokuapp.com/headlines/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.headlineContent = response['headline'][0]['headline'];\n      });\n    });\n\n\n  }\n\n  /** Update headline value **/\n  updateHeadline(newHeadline) {\n    if (newHeadline !== null && newHeadline !== \"\") {\n      this.headlineContent = newHeadline;\n      this.headlineService.updateHeadline(this.accountName, this.headlineContent);\n\n      /** Clear input area after updating. **/\n      this.headline_clear = '';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeadlineService {\n\n  constructor(private http: HttpClient) { }\n\n  getAvatar() {\n    return this.http.get('http://localhost:3000/avatar/hd25', {withCredentials: true});\n  }\n\n  updateHeadline(accountName, headline) {\n    const body = {accountName: accountName, headline: headline};\n    this.http.put('https://ricebook-hd25.herokuapp.com/headline/', body, {withCredentials: true}).subscribe(response => {});\n  }\n\n}\n","module.exports = \"mat-toolbar {\\r\\n  font-size: 150%;\\r\\n\\r\\n  /*position: fixed;*/\\r\\n  /*top: 0;*/\\r\\n  /*z-index: 2;*/\\r\\n\\r\\n}\\r\\n\\r\\n#toProfile {\\r\\n  margin-left: 80%;\\r\\n}\\r\\n\\r\\n#toAuth {\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n#leftDiv {\\r\\n  float: left;\\r\\n  width: 22%;\\r\\n}\\r\\n\\r\\n#headline-layout {\\r\\n  /*float: left;*/\\r\\n  /*width: 13%;*/\\r\\n}\\r\\n\\r\\n#following-layout {\\r\\n  /*float: left;*/\\r\\n  /*height: 100%;*/\\r\\n  /*width: 10%;*/\\r\\n}\\r\\n\\r\\n#posts-layout {\\r\\n  float: right;\\r\\n  width: 72%;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<!DOCTYPE html>\\n\\n<html>\\n  <head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"author\\\" content=\\\"Hao Ding(netID: hd25)\\\">\\n  </head>\\n\\n  <body>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <h1> Main Page </h1>\\n      <input mat-button (click)=\\\"toProfile()\\\" class=\\\"mat-raised-button mat-accent\\\" id=\\\"toProfile\\\" value=\\\"Profile\\\">\\n      <input mat-button (click)=\\\"toAuth()\\\" class=\\\"mat-raised-button mat-accent\\\" id=\\\"toAuth\\\" value=\\\"Log Out\\\">\\n\\n    </mat-toolbar>\\n\\n    <div id=\\\"leftDiv\\\">\\n      <app-headline id=\\\"headline-layout\\\"></app-headline> <br>\\n      <app-following id=\\\"following-layout\\\"></app-following>\\n    </div>\\n\\n    <div id=\\\"rightDiv\\\">\\n      <app-posts id=\\\"posts-layout\\\"></app-posts>\\n    </div>\\n\\n    <br>\\n    <mat-toolbar></mat-toolbar>\\n\\n  </body>\\n\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {MainService} from './main.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  constructor(private router: Router, private mainService: MainService, private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  toProfile() {\n    // this.router.navigate([\"/profile\"]);\n    this.mainService.toProfile(this.router);\n  }\n\n  toAuth() {\n    // this.router.navigate([\"/auth\"]);\n    // this.mainService.toAuth(this.router);\n    this.http.put('https://ricebook-hd25.herokuapp.com/logout', {}, {withCredentials: true}).subscribe(response => {});\n    this.router.navigate([\"/auth\"])\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AdapterService} from '../adapter.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(private adapterService: AdapterService) { }\n\n  toProfile(router) {\n    router.navigate([\"/profile\"]);\n  }\n\n  toAuth(router) {\n    this.adapterService.setUser(\"\");\n    router.navigate([\"/auth\"]);\n  }\n\n  logOut() {\n    this.adapterService.setUser(\"\");\n  }\n}\n","module.exports = \"textarea{\\r\\n  height:120px;\\r\\n  resize: none;\\r\\n\\r\\n  /*border:0;*/\\r\\n  /*background-color:transparent;*/\\r\\n  /*!*scrollbar-arrow-color:yellow;*/\\r\\n  /*scrollbar-base-color:lightsalmon;*/\\r\\n  /*overflow: hidden;*!*/\\r\\n  /*color: #666464;*/\\r\\n  /*!*height: auto;*!*/\\r\\n}\\r\\n\\r\\n.posts-card {\\r\\n  width: 45%;\\r\\n  height: 405px;\\r\\n  float: left;\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n.author-avatar {\\r\\n  width: 60px;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n#selectImg {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.writeForm {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.writeField {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.searchDiv {\\r\\n  float: right;\\r\\n  margin-right: 3%;\\r\\n  margin-top: 20%;\\r\\n  width: 33%\\r\\n}\\r\\n\\r\\n#searchInput {\\r\\n  width: 60%;\\r\\n}\\r\\n\\r\\n.mat-raised-button {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\nimg {\\r\\n  width: 80%;\\r\\n  /*height: 300px;*/\\r\\n  /*width: 400px;*/\\r\\n}\\r\\n\\r\\nmat-chip {\\r\\n  width: 60%;\\r\\n  font-size: 100%;\\r\\n}\\r\\n\\r\\n#edit-post-btn {\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n#submit-post-btn {\\r\\n  margin-left: 30px;\\r\\n}\\r\\n\\r\\n#comment-area {\\r\\n  margin-right: 30px;\\r\\n  width: 50%;\\r\\n}\\r\\n\"","module.exports = \"<!-- search posts by author or content -->\\n<div class=\\\"searchDiv\\\">\\n  <mat-form-field id=\\\"searchInput\\\">\\n    <input matInput #keyWord placeholder=\\\"Search posts here. ^_^\\\" id=\\\"searchArea\\\">\\n  </mat-form-field>\\n  <!--Button to call search function in posts.component.ts file-->\\n  <button mat-button id=\\\"searchBtn\\\" color=\\\"primary\\\" (click)=\\\"search(keyWord.value)\\\"> <mat-icon>search</mat-icon> SEARCH</button>\\n</div>\\n\\n<!-- post articles -->\\n<div class=\\\"writeDiv\\\">\\n  <h2>Post New Article</h2>\\n  <form class=\\\"writeForm\\\" [formGroup]=\\\"formPost\\\">\\n    <!--Field to write posts-->\\n    <mat-form-field class=\\\"writeField\\\">\\n      <textarea matInput id=\\\"postTextArea\\\" placeholder=\\\"Write your post here. ^_^\\\" formControlName=\\\"postControl\\\" [(ngModel)]=\\\"postArea\\\"></textarea>\\n    </mat-form-field>\\n\\n    <input mat-button class=\\\"mat-raised-button mat-accent\\\" value=\\\"Post\\\" type=\\\"submit\\\" (click)=\\\"addPosts()\\\" id=\\\"postBtn\\\">\\n    <input mat-button class=\\\"mat-raised-button mat-accent\\\" value=\\\"Cancel\\\" type=\\\"reset\\\">\\n\\n    <!--Button to upload image, use a mat-button to call click function in a file input button that will not be sen,-->\\n    <a mat-button class=\\\"mat-raised-button mat-accent\\\" onclick=\\\"document.getElementById('selectImg').click()\\\"> Upload Img </a>\\n    <input id=\\\"selectImg\\\" name=\\\"file\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"postImg($event)\\\">\\n  </form>\\n</div>\\n\\n<!--Line to separate up and down part-->\\n<br>\\n<mat-toolbar></mat-toolbar>\\n\\n<!-- show user's posts -->\\n<div id=\\\"previousArticle\\\">\\n  <h2> Posts </h2>\\n  <!--Use mat-card to contain posts-->\\n  <mat-card *ngFor=\\\"let article of postsList\\\" class=\\\"posts-card\\\" id=\\\"postsList\\\"> <!--articleList contains info from articles.json, assigned in posts.component.ts-->\\n\\n    <!--Author's info: avatar, userId, name and post-date-->\\n    <mat-card-header>\\n      <img mat-card-avatar src=\\\"{{article.avatar}}\\\" class=\\\"author-avatar\\\">\\n      <mat-card-title>{{article.author}}</mat-card-title>\\n      <mat-card-subtitle>id: {{article._id}}</mat-card-subtitle>\\n      <mat-card-subtitle>date: {{article.date}}</mat-card-subtitle>\\n    </mat-card-header>\\n\\n    <!--Content text and image of posts-->\\n    <mat-card-content attr.contenteditable={{article.editable}} #articleText id=\\\"articleText\\\">\\n      {{article.text}}\\n    </mat-card-content>\\n    <img md-card-iamge src=\\\"{{article.img}}\\\">\\n\\n    <br><br>\\n\\n    <!--Edit article and submit changes-->\\n    <mat-card-actions>\\n      <button id=\\\"edit-post-btn\\\" mat-button class=\\\"mat-raised-button mat-accent\\\" [disabled]=\\\"article.author != accountName\\\" (click)=\\\"can_edit(article)\\\"> <mat-icon>edit</mat-icon> EDIT POST </button>\\n      <button id=\\\"submit-post-btn\\\" mat-button class=\\\"mat-raised-button mat-accent\\\" [disabled]=\\\"article.author != accountName\\\" (click)=\\\"submit_edit_post(article, articleText.innerHTML)\\\"> <mat-icon>done</mat-icon> SUBMIT CHANGE </button>\\n    </mat-card-actions>\\n\\n    <!--Write comment here and submit-->\\n    <mat-form-field id=\\\"comment-area\\\">\\n      <input matInput placeholder=\\\"Comment here\\\" #commentArea>\\n    </mat-form-field>\\n    <button mat-button class=\\\"mat-raised-button mat-accent\\\" (click)=\\\"post_comment(article, commentArea.value)\\\"> <mat-icon>comment</mat-icon> POST COMMENT </button>\\n\\n\\n    <mat-list *ngFor=\\\"let comment of article['comments']\\\">\\n      <mat-list-item>\\n        <mat-icon matListIcon>comment</mat-icon>\\n        {{comment['author']}}: &nbsp;&nbsp;\\n        <span attr.contenteditable={{comment.editable}} #commentText> {{comment['text']}} </span>\\n        <button id=\\\"edit-comment-btn\\\" mat-button [disabled]=\\\"comment.author != accountName\\\" (click)=\\\"can_edit_comment(comment)\\\"> <mat-icon>edit</mat-icon> EDIT </button>\\n        <button id=\\\"submit-changed-btn\\\" mat-button [disabled]=\\\"comment.author != accountName\\\" (click)=\\\"submit_edit_comment(comment['commentId'], article, comment, commentText.innerHTML)\\\"> <mat-icon>done</mat-icon> SUBMIT </button>\\n\\n      </mat-list-item>\\n    </mat-list>\\n\\n\\n    <!--Comments from users-->\\n    <!--<mat-chip-list *ngFor=\\\"let comment of article['comments']\\\">-->\\n      <!--<mat-chip color=\\\"accent\\\" selected=\\\"true\\\">-->\\n        <!--{{comment}}-->\\n      <!--</mat-chip>-->\\n    <!--</mat-chip-list>-->\\n\\n  </mat-card>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { PostsService } from './posts.service';\nimport {combineLatest} from 'rxjs';\nimport {AdapterService} from '../../adapter.service';\nimport {post} from 'selenium-webdriver/http';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n  accountName: string;\n  img: string;\n  avatar: string;\n  postsList: Object[];\n  postsList_dummy: Object[];\n  formPost;\n  postFormControl;\n\n  postArea:string = '';\n  constructor(private http: HttpClient, private postService: PostsService, private adapterService: AdapterService) { }\n\n  ngOnInit() {\n    this.http.get('https://ricebook-hd25.herokuapp.com/accountname', {withCredentials: true}).subscribe( response => {\n      localStorage.setItem(\"accountName\", response['accountName']);\n\n      if (localStorage.getItem(\"accountName\") !== null) {\n        this.accountName = localStorage.getItem(\"accountName\");\n      }\n\n      this.loadPosts();\n\n      /** get avatar from db **/\n      // this.avatar = \"https://tomli.blog/wp-content/plugins/stronger-github-widget//img/octocat_big.png\";\n      this.http.get('https://ricebook-hd25.herokuapp.com/avatar/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.avatar = response['avatar'][0]['avatar'];\n      });\n\n      // console.log(this.postsList);\n\n      // this.postService.getPostJson().subscribe(response => {\n      //   this.postsList = response['articles'];\n      //   this.postsList_dummy = this.postsList;\n      // });\n      //\n      // this.postService.getPostJson().subscribe(response => {\n      //   this.adapterService.setPostsList(response['articles']);\n      // });\n\n\n    });\n\n    this.postFormControl = new FormControl();\n    this.formPost = new FormGroup({\n      postControl : this.postFormControl\n    });\n\n    // setInterval(() => {\n    //   if (this.adapterService.shouldUpdatePosts === true) {\n    //     console.log('hi');\n    //     for (var i = 0; i < 10; i ++) {\n    //       this.loadPosts();\n    //     }\n    //     this.adapterService.shouldUpdatePosts = false;\n    //   }\n    // }, 100);\n    setInterval(() => { this.updatePostList(); }, 100);\n    // setInterval(this.f(), 1000);\n  }\n\n  /** get posts list from db and sort by date **/\n  loadPosts() {\n    this.http.get('https://ricebook-hd25.herokuapp.com/articles/' + this.accountName, {withCredentials: true}).subscribe(response => {\n      this.postsList = response['articles'];\n      this.postsList.forEach(post => {\n        post['editable'] = false;\n\n        post['comments'].forEach(comment => {\n          comment['editable'] = false;\n        });\n      });\n      console.log(this.postsList);\n      this.adapterService.setPostsList(this.postsList);\n    });\n\n    // this.http.get('https://ricebook-hd25.herokuapp.com/following/' + this.accountName, {withCredentials: true}).subscribe(response => {\n    //   var temp = [];\n    //   response['following'].forEach(following => {\n    //     this.http.get('https://ricebook-hd25.herokuapp.com/articles/' + following, {withCredentials: true}).subscribe(response_post => {\n    //       temp = this.postService.loadPosts(response_post['articles'], temp);\n    //       this.postsList = temp;\n    //       this.sort();\n    //       /** save posts list to cache **/\n    //       this.adapterService.setPostsList(this.postsList);\n    //     });\n    //   });\n    //\n    // });\n  }\n\n  /** sort posts by time **/\n  sort() {\n    this.postsList.sort(function (post1, post2) {\n      return (post1['date'] < post2['date']) ? 1 : -1;\n    });\n  }\n\n  /** Add new post, including author, avatar, time, content **/\n  addPosts() {\n    this.postService.addPosts(this.accountName, this.avatar, this.img, this.formPost.value.postControl, this.postsList).subscribe( response => {\n      this.loadPosts();\n    });\n\n    /** Clear the textarea after posting **/\n    this.postArea = '';\n  }\n\n  /** Search posts by arthor or content **/\n  search(keyWord) {\n    this.postsList_dummy = this.postsList;\n    this.postService.search(keyWord, this.postsList, this.postsList_dummy);\n  }\n\n  updatePostList() {\n    if (this.adapterService.afterSearch) {\n      this.postsList = this.adapterService.getSearchPostsList();\n    } else {\n      this.postsList = this.adapterService.getPostsList();\n    }\n  }\n\n  postImg(event:any) {\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onload = (event:any) => {\n        var result = event.target.result;\n        this.postService.postImg(result).subscribe(response => {\n          this.img = response['url'];\n        });\n      };\n      console.log(event.target.files[0]);\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  can_edit(article) {\n    article['editable'] = true;\n  }\n\n  submit_edit_post(article, text) {\n    article['editable'] = false;\n    const body = {_id: article._id, text: text};\n    this.http.put('https://ricebook-hd25.herokuapp.com/articles/' + article._id, body, {withCredentials: true}).subscribe(response => {});\n  }\n\n  post_comment(article, text) {\n    const body = {commentId: -1, text: text};\n    console.log(body);\n    console.log(article);\n    this.http.put('https://ricebook-hd25.herokuapp.com/articles/' + article._id, body, {withCredentials: true}).subscribe(response => {\n      this.loadPosts();\n    });\n  }\n\n  can_edit_comment(comment) {\n    comment['editable'] = true;\n  }\n\n  submit_edit_comment(commentId, article, comment, text) {\n    comment['editable'] = false;\n    const body = {commentId: commentId, text: text};\n    this.http.put('https://ricebook-hd25.herokuapp.com/articles/' + article._id, body, {withCredentials: true}).subscribe(response => {\n      this.loadPosts();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {AdapterService} from '../../adapter.service';\nimport {element} from 'protractor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private http: HttpClient, private adapterService: AdapterService) { }\n  getPostJson() {\n    return this.http.get('assets/articles.json');\n  }\n\n  loadPosts(posts, temp) {\n    // temp = [];\n    posts.forEach(post => {\n      temp.push(post);\n    });\n    return temp;\n  }\n\n  addPosts(author, avatar, img, text, postsList) {\n    if (!((text === null || text === \"\") && (img === null || img === \"\"))) {\n      const body = {author: author, avatar: avatar, img: img, text: text};\n      console.log(body);\n      return this.http.post('https://ricebook-hd25.herokuapp.com/article/', body, {withCredentials: true});\n    }\n\n  }\n\n  fetchUsersPost(name, postsList) {\n    /** add posts according to name **/\n    var usersPost = [];\n    for (var i = 0; i < postsList.length; i++) {\n      if (postsList[i]['author'] === name) {\n        usersPost.push(postsList[i]);\n      }\n    }\n    return usersPost;\n  }\n\n  search(keyWord, postsList, postsList_dummy) {\n    // console.log(postsList);\n    var temp = postsList_dummy;\n    postsList = postsList_dummy.filter(ariticle => ariticle['author'].indexOf(keyWord) !== -1 || ariticle['text'].indexOf(keyWord) !== -1);\n    postsList_dummy = temp;\n    this.adapterService.setSearchPostsList(postsList);\n  }\n\n  // upload image in post\n  postImg(result) {\n    var body = {\"file\": result, \"upload_preset\": \"dyxq9b9o\"};\n    return this.http.post('https://api.cloudinary.com/v1_1/rice-university/image/upload', body);\n  }\n}\n","module.exports = \"body {\\r\\n  height: 136%;\\r\\n  background: url(https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-689263.jpg) no-repeat fixed;\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.infoDiv {\\r\\n  float: left;\\r\\n  margin-left:6%;\\r\\n  margin-top:5%;\\r\\n  width: 18%;\\r\\n\\r\\n  background-color:rgba(255, 255, 255, 0.8);\\r\\n  border-color:#ffffcc;\\r\\n  padding:10px 80px 30px 60px;\\r\\n}\\r\\n\\r\\n.updateDiv {\\r\\n  float: left;\\r\\n  margin-top:5%;\\r\\n  margin-left: 5%;\\r\\n  width: 18%;\\r\\n\\r\\n  background-color:rgba(255, 255, 255, 0.8);\\r\\n  border-color:#ffffcc;\\r\\n  padding:10px 60px 10px 60px;\\r\\n}\\r\\n\\r\\n.linkDiv {\\r\\n  float: right;\\r\\n  margin-top:5%;\\r\\n  margin-right: 5%;\\r\\n\\r\\n  background-color:rgba(255, 255, 255, 0.9);\\r\\n  border-color:#ffffcc;\\r\\n  padding:10px 60px 10px 60px;\\r\\n}\\r\\n\\r\\nform {\\r\\n  /*margin:20px auto;*/\\r\\n  /*padding:10px 60px 10px 60px;*/\\r\\n}\\r\\n\\r\\n.mat-raised-button {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\n#profilePicInput {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\nmat-chip {\\r\\n  font-size: 110%;\\r\\n}\\r\\n\\r\\n#toMain {\\r\\n  margin-left: 80%;\\r\\n}\\r\\n\\r\\n#link-account, #link-password {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<!DOCTYPE html>\\n\\n<html>\\n  <head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"author\\\" content=\\\"Hao Ding(netID: hd25)\\\">\\n  </head>\\n\\n  <body>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <h1> Profile </h1>\\n      <a mat-button (click)=\\\"toMain()\\\" class=\\\"mat-raised-button mat-accent\\\" id=\\\"toMain\\\"> Return to Main </a>\\n    </mat-toolbar>\\n\\n    <div class=\\\"infoDiv\\\">\\n      <h2>\\n        CURRENT INFORMATION\\n      </h2>\\n\\n      <img src={{avatar}} height=\\\"100px\\\" width=\\\"100px\\\"><br>\\n      <a mat-button class=\\\"mat-raised-button mat-warn\\\" onclick=\\\"document.getElementById('profilePicInput').click()\\\"> Update New Photo </a>\\n      <input id=\\\"profilePicInput\\\" name=\\\"file\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"postImg($event)\\\">\\n      <!--<input id=\\\"selectImg\\\" name=\\\"file\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"postImg($event)\\\">-->\\n\\n      <br><br>\\n\\n      <mat-chip-list class=\\\"mat-chip-list-stacked\\\" aria-orientation=\\\"vertical\\\">\\n        Account name:\\n        <mat-chip selected=\\\"true\\\" color=\\\"accent\\\"> {{accountName}} </mat-chip><br>\\n\\n        Display name:\\n        <mat-chip selected=\\\"true\\\" color=\\\"accent\\\"> {{displayName}} </mat-chip><br>\\n\\n        E-mail Address:\\n        <mat-chip selected=\\\"true\\\" color=\\\"accent\\\"> {{emailAddress}} </mat-chip><br>\\n\\n        Date of Birth:\\n        <mat-chip selected=\\\"true\\\" color=\\\"accent\\\"> {{birthday}} </mat-chip><br>\\n\\n        Phone Number:\\n        <mat-chip selected=\\\"true\\\" color=\\\"accent\\\"> {{phoneNumber}} </mat-chip><br>\\n\\n        Zipcode:\\n        <mat-chip selected=\\\"true\\\" color=\\\"accent\\\"> {{zipCode}} </mat-chip><br>\\n\\n        Password:\\n        <mat-chip selected=\\\"true\\\" color=\\\"accent\\\"> {{password}} </mat-chip><br>\\n      </mat-chip-list>\\n    </div>\\n\\n    <div class=\\\"updateDiv\\\">\\n      <h2> UPDATE INFORMATION </h2>\\n      <form #updateForm=\\\"ngForm\\\" [formGroup]=\\\"formUpdate\\\" name=\\\"registerForm\\\" method=\\\"GET\\\" action=\\\"/main\\\">\\n        <p>ACCOUNT NAME:\\n          <mat-form-field>\\n            <input matInput type=\\\"text\\\" name=\\\"accountName\\\" placeholder=\\\"Hao Ding\\\" formControlName=\\\"accountControl\\\" [formControl]=\\\"accountFormControl\\\" [(ngModel)]=\\\"account_clear\\\">\\n            <mat-error *ngIf=\\\"accountFormControl.hasError('pattern')\\\">\\n              Please enter a valid account name\\n            </mat-error>\\n            <mat-error *ngIf=\\\"accountFormControl.hasError('required')\\\">\\n              Account Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </p>\\n\\n        <p>DISPLAY NAME:\\n          <mat-form-field>\\n            <input matInput type=\\\"text\\\" name=\\\"displayName\\\" placeholder=\\\"Hao-Ding-6\\\" formControlName=\\\"displayControl\\\" [formControl]=\\\"displayFormControl\\\" [(ngModel)]=\\\"display_clear\\\">\\n          </mat-form-field>\\n        </p>\\n\\n        <p>EMAIL ADDRESS:\\n          <mat-form-field>\\n            <input matInput type=\\\"text\\\" name=\\\"emailAddress\\\" placeholder=\\\"xxx@xxx.com\\\" formControlName=\\\"emailControl\\\" [formControl]=\\\"emailFormControl\\\" [(ngModel)]=\\\"email_clear\\\">\\n            <mat-error *ngIf=\\\"emailFormControl.hasError('pattern')\\\">\\n              Please enter a valid email address\\n            </mat-error>\\n            <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n              Email is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </p>\\n\\n        <p>DATE OF BIRTH:\\n          <mat-form-field>\\n            <input matInput [matDatepicker]=\\\"picker\\\" name=\\\"birthday\\\" placeholder=\\\"Choose your birth date\\\" formControlName=\\\"birthdayControl\\\" [formControl]=\\\"birthdayFormControl\\\" [(ngModel)]=\\\"birthday_clear\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n            <mat-error *ngIf=\\\"birthdayFormControl.hasError('required')\\\">\\n              Date of birth is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </p>\\n\\n        <p>PHONE NUMBER:\\n          <mat-form-field>\\n            <input matInput type=\\\"text\\\" name=\\\"phoneNumber\\\" placeholder=\\\"123-123-1234\\\"  formControlName=\\\"phonenumControl\\\" [formControl]=\\\"phonenumFormControl\\\" [(ngModel)]=\\\"phone_clear\\\">\\n            <mat-error *ngIf=\\\"phonenumFormControl.hasError('pattern')\\\">\\n              Please enter a valid phone number\\n            </mat-error>\\n            <mat-error *ngIf=\\\"phonenumFormControl.hasError('required')\\\">\\n              Phone Number is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </p>\\n\\n        <p>ZIP CODE:\\n          <mat-form-field>\\n            <input matInput type=\\\"text\\\" name=\\\"zipCode\\\" placeholder=\\\"77030\\\" formControlName=\\\"zipcodeControl\\\" [formControl]=\\\"zipcodeFormControl\\\" [(ngModel)]=\\\"zipcode_clear\\\">\\n            <mat-error *ngIf=\\\"zipcodeFormControl.hasError('pattern')\\\">\\n              Please enter a valid zipcode\\n            </mat-error>\\n            <mat-error *ngIf=\\\"zipcodeFormControl.hasError('required')\\\">\\n              Zipcode is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </p>\\n\\n        <p>PASSWORD:\\n          <mat-form-field>\\n            <input matInput type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"passwordControl\\\" [formControl]=\\\"passwordFormControl\\\" [(ngModel)]=\\\"password_clear\\\">\\n            <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n              Password is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </p>\\n\\n        <p>\\n          <input mat-button (click)=\\\"submitForm()\\\"  class=\\\"mat-raised-button mat-accent\\\" type=\\\"submit\\\" value=\\\"Submit\\\"\\n                 [disabled]=\\\"!updateForm.valid\\\">\\n          <input mat-button class=\\\"mat-raised-button mat-accent\\\" type=\\\"reset\\\" value=\\\"Clear\\\">\\n        </p>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"linkDiv\\\">\\n      <h2>Link Account</h2>\\n      <mat-form-field id=\\\"link-account\\\">\\n        <input #linkAccount matInput placeholder=\\\"Input the account name you want to link\\\">\\n      </mat-form-field>\\n      <br>\\n      <mat-form-field id=\\\"link-password\\\">\\n        <input type=\\\"password\\\" #linkPassword matInput placeholder=\\\"Input the correct password\\\">\\n      </mat-form-field>\\n      <br>\\n      <button class=\\\"mat-raised-button mat-primary\\\" mat-button color=\\\"primary\\\" (click)=\\\"link(linkAccount.value, linkPassword.value)\\\"><mat-icon>person_outline</mat-icon>Link Account</button>\\n      <button class=\\\"mat-raised-button mat-warn\\\" mat-button color=\\\"warn\\\" (click)=\\\"unlink()\\\"><mat-icon>person_outline</mat-icon>Unlink Account</button>\\n    </div>\\n\\n\\n  </body>\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProfileService} from './profile.service';\nimport { AdapterService } from '../adapter.service';\nimport { FormGroup } from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  constructor(private profileService: ProfileService, private adapterService: AdapterService, private router: Router, private http: HttpClient) { }\n  formUpdate;\n  accountFormControl;\n  displayFormControl;\n  emailFormControl;\n  birthdayFormControl;\n  phonenumFormControl;\n  zipcodeFormControl;\n  passwordFormControl;\n\n  accountName: string;\n  displayName: string;\n  emailAddress: string;\n  birthday: string;\n  phoneNumber: string;\n  zipCode: string;\n  password: string;\n  avatar: string;\n\n  jsonStr: string;\n\n  account_clear:string = '';\n  display_clear:string = '';\n  email_clear:string = '';\n  birthday_clear:string = '';\n  phone_clear:string = '';\n  zipcode_clear:string = '';\n  password_clear:string = '';\n\n  profileList: string;\n\n  ngOnInit() {\n\n    this.http.get('https://ricebook-hd25.herokuapp.com/accountname', {withCredentials: true}).subscribe( response => {\n      localStorage.setItem(\"accountName\", response['accountName']);\n\n      if (localStorage.getItem(\"accountName\") !== null) {\n        this.accountName = localStorage.getItem(\"accountName\");\n      }\n\n      this.http.get('https://ricebook-hd25.herokuapp.com/avatar/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.avatar = response['avatar'][0]['avatar'];\n      });\n\n      this.http.get('https://ricebook-hd25.herokuapp.com/display/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.displayName = response['displayName'];\n      });\n\n      this.http.get('https://ricebook-hd25.herokuapp.com/email/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.emailAddress = response['emailAddress'];\n      });\n\n      this.http.get('https://ricebook-hd25.herokuapp.com/dob/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.birthday = response['birthday'];\n      });\n\n      this.http.get('https://ricebook-hd25.herokuapp.com/phone/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.phoneNumber = response['phoneNumber'];\n      });\n\n      this.http.get('https://ricebook-hd25.herokuapp.com/zipcode/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.zipCode = response['zipCode'];\n      });\n\n      this.http.get('https://ricebook-hd25.herokuapp.com/password/' + this.accountName, {withCredentials: true}).subscribe(response => {\n        this.password = response['password'];\n      });\n    });\n\n\n\n    /** default value, if not register. **/\n    // const temp = this.profileService.getProfileJson().subscribe(response => {this.profileList = response['profile'];});\n    // const default_profile = JSON.parse(this.profileList);\n    // this.accountName = \"Hao Ding\";\n    // this.displayName = \"HaoDing6\";\n    // this.emailAddress = \"qwe@qwe.com\";\n    // this.birthday = \"1996-04-11\";\n    // this.phoneNumber = \"123-123-1234\";\n    // this.zipCode = \"77030\";\n    // this.password = \"qweasd\";\n    //\n    // /** If registered, read info from Json adapter. **/\n    // this.jsonStr = this.adapterService.getJson();\n    // if (this.jsonStr != null) {\n    //   // const profile = JSON.parse(this.jsonStr).profile[0];\n    //   const profile = this.profileService.getProfileJson();\n    //   this.accountName = profile.accountName;\n    //   this.displayName = profile.displayName;\n    //   this.emailAddress = profile.emailAddress;\n    //   this.birthday = profile.birthday;\n    //   this.phoneNumber = profile.phoneNumber;\n    //   this.zipCode = profile.zipCode;\n    //   this.password = profile.password;\n    // }\n\n    /** From control part **/\n    this.accountFormControl = this.profileService.getAccountControl();\n    this.displayFormControl = this.profileService.getDisplayControl();\n    this.emailFormControl = this.profileService.getEmailControl();\n    this.birthdayFormControl = this.profileService.getBirthdayControl();\n    this.phonenumFormControl = this.profileService.getPhonenumControl();\n    this.zipcodeFormControl = this.profileService.getZipcodeControl();\n    this.passwordFormControl = this.profileService.getPasswordControl();\n\n    this.formUpdate = new FormGroup({\n      accountControl: this.accountFormControl,\n      displayControl: this.displayFormControl,\n      emailControl: this.emailFormControl,\n      birthdayControl: this.birthdayFormControl,\n      phonenumControl: this.phonenumFormControl,\n      zipcodeControl: this.zipcodeFormControl,\n      passwordControl: this.passwordFormControl,\n    });\n  }\n\n  submitForm() {\n    if (this.formUpdate.value.accountControl !== \"\") {\n      this.accountName = this.formUpdate.value.accountControl;\n      this.account_clear = '';\n    }\n\n    if (this.formUpdate.value.displayControl !== \"\") {\n      this.displayName = this.formUpdate.value.displayControl;\n      this.display_clear = '';\n    }\n\n    if (this.formUpdate.value.emailControl !== \"\") {\n      const body = {accountName: this.accountName, emailAddress: this.formUpdate.value.emailControl};\n      this.http.put('https://ricebook-hd25.herokuapp.com/email/', body, {withCredentials: true}).subscribe( response => {\n        this.emailAddress = response['emailAddress'];\n      });\n      this.email_clear = '';\n    }\n\n    if (this.formUpdate.value.birthdayControl !== \"\") {\n      var selectedDate = new Date(this.formUpdate.value.birthdayControl);\n      var birthday =  selectedDate.getFullYear() + \"-\" + (selectedDate.getMonth() + 1) + \"-\" + selectedDate.getDate();\n      this.birthday = birthday;\n      this.birthday_clear = '';\n    }\n\n    if (this.formUpdate.value.phonenumControl !== \"\") {\n      this.phoneNumber = this.formUpdate.value.phonenumControl;\n      this.phone_clear = '';\n    }\n\n    if (this.formUpdate.value.zipcodeControl !== \"\") {\n      const body = {accountName: this.accountName, zipCode: this.formUpdate.value.zipcodeControl};\n      this.http.put('https://ricebook-hd25.herokuapp.com/zipcode/', body, {withCredentials: true}).subscribe( response => {\n        this.zipCode = response['zipCode'];\n      });\n      this.zipcode_clear = '';\n    }\n\n    if (this.formUpdate.value.passwordControl !== \"\") {\n      const body = {accountName: this.accountName, password: this.formUpdate.value.passwordControl};\n      this.http.put('https://ricebook-hd25.herokuapp.com/password/', body, {withCredentials: true}).subscribe( response => {\n        this.password = response['password'];\n      });\n      this.password_clear = '';\n    }\n\n    /** Store changed info to Json adapter **/\n    var accountName = this.accountName;\n    var displayName = this.displayName;\n    var emailAddress = this.emailAddress;\n    var selectedDate = new Date(this.birthday);\n    var birthday =  selectedDate.getFullYear() + \"-\" + (selectedDate.getMonth() + 1) + \"-\" + selectedDate.getDate();\n    var phoneNumber = this.phoneNumber;\n    var zipCode = this.zipCode;\n    var password = this.password;\n    this.jsonStr = '{\"profile\":[' + '{\"accountName\":\"' + accountName + '\",\"displayName\":\"' + displayName + '\",\"emailAddress\":\"' + emailAddress + '\",\"birthday\":\"' + birthday + '\",\"phoneNumber\":\"' + phoneNumber + '\",\"zipCode\":\"' + zipCode + '\",\"password\":\"' + password + '\"}' + ']}';\n    this.adapterService.setJson(this.jsonStr);\n  }\n\n  toMain() {\n    this.router.navigate([\"/main\"]);\n  }\n\n  postImg(event:any) {\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onload = (event:any) => {\n        var result = event.target.result;\n        this.profileService.postImg(result).subscribe(response => {\n          this.avatar = response['url'];\n\n          /** update database **/\n          const body = {accountName: this.accountName, avatar: this.avatar};\n          this.http.put('https://ricebook-hd25.herokuapp.com/avatar/', body, {withCredentials: true}).subscribe( response => {});\n        });\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  link(accountName, password) {\n    const body = {accountName: accountName, password: password};\n    this.http.post('https://ricebook-hd25.herokuapp.com/link/', body, {withCredentials: true}).subscribe( response => {\n      this.http.put('https://ricebook-hd25.herokuapp.com/logout', {}, {withCredentials: true}).subscribe(response => {});\n      this.router.navigate([\"/auth\"]);\n    });\n  }\n\n  unlink() {\n    this.http.get('https://ricebook-hd25.herokuapp.com/unlink/', {withCredentials:true}).subscribe( response => {\n      this.http.put('https://ricebook-hd25.herokuapp.com/logout', {}, {withCredentials: true}).subscribe(response => {});\n      this.router.navigate([\"/auth\"]);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport {AdapterService} from '../adapter.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n  accountFormControl = new FormControl('', [\n    Validators.pattern(/^(?![0-9])[a-zA-Z0-9]+$/)]);\n\n  displayFormControl = new FormControl('', []);\n\n  emailFormControl = new FormControl('', [\n    Validators.pattern(/^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/)]);\n\n  birthdayFormControl = new FormControl('', []);\n\n  phonenumFormControl = new FormControl('', [\n    Validators.pattern(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/)]);\n\n  zipcodeFormControl = new FormControl('', [\n    Validators.pattern(/[0-9]{5}(-[0-9]{4})?/)]);\n\n  passwordFormControl = new FormControl('', []);\n\n  constructor(private http: HttpClient, private adapterService: AdapterService) { }\n\n  getAccountControl(): FormControl {\n    return this.accountFormControl;\n  }\n\n  getDisplayControl(): FormControl {\n    return this.displayFormControl;\n  }\n\n  getEmailControl(): FormControl {\n    return this.emailFormControl;\n  }\n\n  getBirthdayControl(): FormControl {\n    return this.birthdayFormControl;\n  }\n\n  getPhonenumControl(): FormControl {\n    return this.phonenumFormControl;\n  }\n\n  getZipcodeControl(): FormControl {\n    return this.zipcodeFormControl;\n  }\n\n  getPasswordControl(): FormControl {\n    return this.passwordFormControl;\n  }\n\n  postImg(result) {\n    var body = {\"file\": result, \"upload_preset\": \"dyxq9b9o\"};\n    return this.http.post('https://api.cloudinary.com/v1_1/rice-university/image/upload', body);\n  }\n\n  getProfileJson() {\n    return JSON.parse(this.adapterService.getJson()).profile[0];\n  }\n\n  // getProfileJson() {\n  //   return this.http.get('assets/default_profile.json');\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}